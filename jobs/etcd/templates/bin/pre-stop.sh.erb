#!/bin/bash -eu

# log "[pre-stop] Env: $(env | tr '\n' ';')" >> /var/vcap/sys/log/etcd/lifecycle.debug.log
# BOSH_VM_NEXT_STATE - either `keep` if the VM will be the same VM that start is called on after the stop process,
#   or `delete` if after stop process the VM will be deleted.
# BOSH_INSTANCE_NEXT_STATE - either `keep` if the instance will be unaffected by the stop process,
#   or `delete` if the instance is deleted after stop process is completed.
#   If this is set to `delete`, the VM will be deleted and a replacement for it will not be created.
# BOSH_DEPLOYMENT_NEXT_STATE - either `keep` if the deployment will remain after the stop process,
#   or `delete` if the deployment is going to be deleted after completion of the stop process.

source /var/vcap/packages/tools/scripts/common.sh
source /var/vcap/jobs/etcd/bin/etcd-functions.sh
assert_declared_functions 'etcd_remove_member_from_cluster'

etcd_member_name=''; etcd_client_cluster_urls=''
source /var/vcap/jobs/etcd/bin/etcd-utils.sh
assert_declared_functions 'audit_log_ensure_access' 'log_audit'
assert_non_empty_variables 'etcd_member_name' 'etcd_client_cluster_urls'

audit_log_ensure_access

log_audit "etcd:pre-stop" "begin (BOSH_VM_NEXT_STATE=$BOSH_VM_NEXT_STATE, BOSH_INSTANCE_NEXT_STATE=$BOSH_INSTANCE_NEXT_STATE, BOSH_DEPLOYMENT_NEXT_STATE=$BOSH_DEPLOYMENT_NEXT_STATE)"

if [ "$BOSH_INSTANCE_NEXT_STATE" == "delete" ]; then
  if etcd_remove_member_from_cluster "$etcd_client_cluster_urls" "$etcd_member_name"; then
    log_audit "etcd:pre-stop" "member $etcd_member_name removed from the cluster"
  else
    log_audit "etcd:pre-stop" "cannot remove member $etcd_member_name from the cluster, continue anyway..."
  fi
fi

log_audit "etcd:pre-stop" "end"